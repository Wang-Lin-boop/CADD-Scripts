#!/bin/bash

#Default
    # MD system build
    export System_Mode="INC"

    export UserSet_nega_Neutral=false
    export rezerosys=true
    export minisys=true

    export boxshape=cubic
    export boxsize=15.0

    export ffid=OPLS_2005
    export hydrogen_mass_repartition=false

    export saltconcentration=0.15
    
    # MD params
    export MD_Mode="Normal"

    export num=1
    export mintime_ps=100
    export mdtime_ps=100000.0
    export Temperature=310
    export frames=1000

    export Meta_window=0.05
    export constraintForce=10.0
    export constraintASL="protein AND backbone"
    export Distance_Wall=10.0

    # File and Host
    export input=*.mae
    export CPU_HOST=HPC_CPU
    export GPU_HOST=HPC_GPU

    # Desmond
    export Desmond=${Desmond}

function help (){
cat<<HELP

Usage: mdgo [OPTION] <parameter>

An automatic Desmond MD pipeline.

Example: 

1) DSMDrun -i *.mae -S INC -M PL -A "chain.name A" -B "res.ptype UNK" -H HPC_CPU -G HPC_GPU
2) DSMDrun -i *.mae -S OUC -M PP -A "chain.name A" -B "chain.name B" -t 200 -H HPC_CPU -G HPC_gpu01
3) DSMDrun -i *.mae -S "TIP4P:Cl:0.15-Na-Cl+0.02-Fe2-Cl+0.02-Mg2-Cl" -T 300 -H HPC_CPU -G HPC_GPU
4) DSMDrun -i *.mae -S INC -M META -A "chain.name A" -B "res.ptype UNK" -H HPC_CPU -G HPC_GPU

Input parameter:
  -i	Use a file name (Multiple files are wrapped in "", and split by ' ') or regular expression to represent your input file, default is *.mae.

MD System parameter:
  -S    System Build Mode: <INC>
            INC: System in cell, salt buffer is 0.15M KCl, water is TIP3P. Add K to neutralize system.
            OUC: System out of cell, salt buffer is 0.15M NaCl, water is TIP3P. Add Na to neutralize system.
            Custom Instruct: Such as: "TIP4P:Cl:0.15-Na-Cl+0.02-Fe2-Cl+0.02-Mg2-Cl"
                Interactive addition of salt. Add Cl to neutralize system.
                    for positive_ion: Na, Li, K, Rb, Cs, Fe2, Fe3, Mg2, Ca2, Zn2 are predefined.
                    for nagative_ion: F, Cl, Br, I are predefined.
                    for water: SPC, TIP3P, TIP4P, TIP5P, DMSO, METHANOL are predefined.

  -N	Do you want to use negative_ion to neutralize_system? Defulat is no.
		    if you use this option, your systems will be neutralize by nagative_ion.
  -b	Define a boxshape for your systems. <cubic>
            box types: dodecahedron_hexagon, cubic, orthorhombic, triclinic
  -s	Define a boxsize for your systems.  <15.0>
		for dodecahedron_hexagon and cubic, defulat is 15.0;
		for orthorhombic or triclinic box, defulat is [15.0 15.0 15.0];
		If you want use Orthorhombic or Triclinic box, your parameter should be like "15.0 15.0 15.0"
  -R    Redistribute the mass of heavy atoms to bonded hydrogen atoms to slow-down high frequency motions.
  -F	Define a force field to build your systems.
		OPLS_2005, S-OPLS, amber99SB-ILDN, amber03, amber99, amber99SB, charmm32, charmm36_lipids are recommended.

MD control parameter:
  -M    Run Mode: <Normal>
            Normal: MD simulation for structure relax.
            MIN: Short time simulation for relax.
        The follwing Mode needs to -A and -B options: such as: -A "chain.name A" -B "res.ptype UNK"
            PL: MD analysis for protein-ligand interaction.
            PP: MD analysis for protein-protein interaction.
            META: Metadynamics analysis for two group.

  -m	Enter the maximum simulation time for the Brownian motion simulation, in ps. <100>
  -t    Enter the Molecular dynamics simulation time for the Product simulation, in ns. <100>
  -T    Specify the temperature to be used, in kelvin. <310>
  -n    Number of Repeat simulation with different random numbers. <1>
  -A    Define a ASL to protein or solute 1, such as "chain.name A"
  -B    Define a ASL to ligand or solute 2, such as "res.ptype UNK"
  -C    Set Positional constraint to an ASL, such as "protein AND backbone"
  -f    Set Positional constraint force, default is 10.0.
  -d    Set the wall of metadynamics, default is 10.0.
  -w    Window width of Metadynamics, default is 0.05.
  -o    Specify the approximate number of frames in the trajectory.  <1000>
        This value is coupled with the recording interval for the trajectory and the simulation time: the number of frames times the trajectory recording interval is the total simulation time.
        If you adjust the number of frames, the recording interval is modified.

Job control:
  -H	Hostname of your queue, default is HPC_CPU.
  -G    GPU Host you wanna to use, default is  HPC_GPU.
  -D	Your Desmond path. <$Desmond>

Thank you for your using, If you found any question, Please contact wanglin3@shanghaitech.edu.cn.
HELP
}

while getopts ":hi:S:N:b:s:F:M:m:t:T:n:A:B:C:D:f:d:w:o:G:H:g:R" opt
do
  case $opt in
    h)
        help
        exit;;
    S)
        System_Mode=$OPTARG;;
    M)
        MD_Mode=$OPTARG;;
    N)
        UserSet_nega_Neutral=true;;
    i)
        input=$OPTARG;;
    s)
        boxsize=$OPTARG
        boxxyz=${boxsize}
        ;;
    b)
        boxshape=$OPTARG;;
    w)
        Meta_window=$OPTARG;;
    R)
        hydrogen_mass_repartition=true;;
    m)
        Userset_mintime_ps=$OPTARG;;
    H)
        CPU_HOST=$OPTARG;;
    G)
        GPU_HOST=$OPTARG;;
    D)
        Desmond=$OPTARG;;
    d)
        Distance_Wall=$OPTARG;;
    f)
        constraint=true
        constraintForce=$OPTARG;;
    C)
        constraint=true
        constraintASL=$OPTARG;;
    t)
        Userset_mdtime_ps=`echo "${OPTARG} * 1000.0"|bc`;;
    n)
        num=$OPTARG;;
    A)
        GroupA_ASL=$OPTARG
        ;;
    B)
        GroupB_ASL=$OPTARG
        ;;
    T)
        Temperature=$OPTARG;;
    o)
        frames=$OPTARG;;
    F)
        ffid=$OPTARG;;
    ?)
      echo ""
      echo "Error: Do not use undefined options. Try -h."
      echo ""
      exit;;
  esac
done

# Check Desmond and hostfile
if [ -d ${Desmond} ];then
  if [ "${Desmond}" == "" ];then
    echo "Desmond not found. Please check your Desmond Path."
    exit
  fi
  if [ "`grep -c $CPU_HOST ${Desmond}/schrodinger.hosts`" == "0" ];then
    echo $CPU_HOST "Hostfile not found."
    exit
  fi
  if [ "`grep -c $GPU_HOST ${Desmond}/schrodinger.hosts`" == "0" ];then
    echo $GPU_HOST "Hostfile not found."
    exit
  fi
else
  echo "Desmond not found. Please check your Desmond Path."
  exit
fi

# box type and size
if [ "${boxshape}"x == "orthorhombic"x ];then
  boxsize="[${boxxyz} ]"
elif [ "${boxshape}"x == "triclinic"x ];then
  boxsize="[${boxxyz} 60.0 60.0 60.0 ]"
else
  boxsize=${boxsize}
fi

# MD basic control
seedlist=()
if [ ${num} -gt 3 ];then
    read -p "Do you really want to run more than three random simulations? Make sure you have adequate resources. Press Enter to continue and enter NO to exit!" makesure
    if [ "$makesure" == "NO" ];then
        echo "This is really a wise choice!"
        exit
    else
        echo "Your system will perform ${num} simulations at different random speeds."
        for i in $(seq 1 ${num});do
        seedlist+=("$RANDOM");done
    fi
elif [ "${num}" == "1" ];then
        seedlist=(2007)
        echo "Your system will only perform one simulation."
else
    echo "Your system will perform ${num} simulations at different random speeds."
    for i in $(seq 1 ${num});do
    seedlist+=("$RANDOM");done
fi

#check params
fflist=("OPLS_2005" "OPLS3e" "OPLS4" "OPLS3" "OPLS2" "amber99SB-ILDN" "amber03" "amber99" "amber99SB" "charmm32" "charmm36_lipids" "S-OPLS")
nagativeionlist=("F" "Cl" "Br" "I")
positiveionlist=("Na" "K" "Li" "Rb" "Cs" "Mg2" "Ca2" "Zn2" "Fe2" "Fe3")
all_ions_list=("F" "Cl" "Br" "I" "Na" "K" "Li" "Rb" "Cs" "Mg2" "Ca2" "Zn2" "Fe2" "Fe3")
solventlist=("SPC" "TIP3P" "TIP4P" "TIP5P" "DMSO" "METHANOL")
boxlist=("orthorhombic" "triclinic" "dodecahedron_hexagon" "cubic")
waterlist=("SPC" "TIP3P" "TIP4P" "TIP5P")

#job information
Params_Name=${System_Mode}-${MD_Mode}
MSJ_file=${Params_Name}-MD.msj
CFG_file=${Params_Name}-MD.cfg
Job_Dir=`pwd`

function checkparam (){
testlogic=false
for line in $2
do
if [ "$1"x == "$line"x ];then
  testlogic=true;break;fi
done
if [ "${testlogic}"x == "true"x ];then
  echo "Note: Parameter "$1" is vaild.";
else
  echo "Error: your parameter "$1" is unvaild, please check it." ;echo ""
  exit
fi
}
checkparam $ffid "${fflist[*]}"
checkparam $boxshape "${boxlist[*]}"

# Parse constraint
if [ "$constraint"x == "true"x ];then
    User_set_constraint="restrain = {atom = \"asl:${constraintASL}\" force_constant = ${constraintForce}}"
else
    User_set_constraint="restrain = none"
fi

add_counterion(){
    neutralizeion=$1
cat<<EOF
  add_counterion = {
       ion = ${neutralizeion}
       number = neutralize_system
  }
EOF
};export -f add_counterion

box(){
    boxshape=$1
    boxsize=$2
cat<<EOF
  box = {
     shape = ${boxshape}
     size = ${boxsize}
     size_type = buffer
  }
EOF
};export -f box

setup_salt(){
    saltconcentration=$1
    positive_ion=$2
    negative_ion=$3
cat<<EOF
  salt = {
     concentration = ${saltconcentration}
     negative_ion = ${negative_ion}
     positive_ion = ${positive_ion}
  }
EOF
};export -f setup_salt

check_neutralize_ion(){
    UserSet_nega_Neutral=$1
    positive_ion=$2
    negative_ion=$3
if [ "$UserSet_nega_Neutral"x == "true"x ];then
	neutralizeion=$negative_ion
elif [ "$UserSet_nega_Neutral"x == "false"x ];then
	neutralizeion=$positive_ion
else
  echo "script not running, please ensure you want use negative_ion to neutralize_system or not."
  exit
fi
};export -f check_neutralize_ion

build_geometry(){
    echo "build_geometry {" >> ${MSJ_file}
    check_neutralize_ion $UserSet_nega_Neutral $positive_ion $negative_ion
    add_counterion ${neutralizeion} >> ${MSJ_file}
    echo "add ion to neutral: ${neutralizeion}"
    box ${boxshape} ${boxsize} >> ${MSJ_file}
    if [ ${ffid:0:4} == "OPLS" ] || [ ${ffid} == "S-OPLS" ]; then
        echo "  override_forcefield = ${ffid}" >> ${MSJ_file}
    else
        echo "  override_forcefield = OPLS_2005" >> ${MSJ_file}
    fi
    echo "  rezero_system = ${rezerosys}" >> ${MSJ_file}
    echo "  minimize_volume = ${minisys}" >> ${MSJ_file}
    setup_salt ${saltconcentration} ${positive_ion} ${negative_ion} >> ${MSJ_file}
    echo "add salt: ${saltconcentration} M ${position}${negaion}"
    echo "  solvent = ${solvent}" >> ${MSJ_file}
    echo "add solvent: ${solvent}"
    echo "}" >> ${MSJ_file}
}

Brownie_simulate(){
    # Brownie_simulate simulate_time temperature constraintDescription class
    simulate_time=$1
    temperature=$2
    constraintDescription=$3
    class=$4
cat<<BROSIM
simulate {
    title       = "Brownian Dynamics, T = ${temperature} K, small timesteps, ${simulate_time} ps"
    annealing   = off
    time        = ${simulate_time}
    timestep    = [0.001 0.001 0.003 ]
    temperature = ${temperature}
    ensemble = {
        class = "${class}"
        method = "Brownie"
        brownie = {
            delta_max = 0.1
        }
    }
    ${constraintDescription}
}
BROSIM
}

Langevin_small_timestep(){
    # Langevin_small_timestep simulate_time temperature constraintDescription class
    simulate_time=$1
    temperature=$2
    constraintDescription=$3
    class=$4
cat<<BROSIM
simulate {
    title       = "Langevin Dynamics, T = ${temperature} K, ${simulate_time} ps"
    annealing   = off
    time        = ${simulate_time}
    timestep    = [0.001 0.001 0.003]
    temperature = ${temperature}
    ${constraintDescription}
    ensemble    = {
        class  = ${class}
        method = Langevin
        thermostat.tau = 0.1
    }
    randomize_velocity.interval = 1.0
    eneseq.interval             = 0.3
    trajectory.center           = []
}
BROSIM
}

Langevin_simulate_1(){
    # Langevin_simulate_1 simulate_time temperature class constraintDescription annealing
    simulate_time=$1
    temperature=$2
    class=$3
    constraintDescription=$4
    annealing=$5
cat<<BROSIM
simulate {
    title       = "Langevin Dynamics, T = ${temperature} K, ${simulate_time} ps"
    annealing   = ${annealing}
    time        = ${simulate_time}
    temperature = ${temperature}
    ${constraintDescription}
    ensemble    = {
        class  = ${class}
        method = Langevin
        thermostat.tau = 0.1
        barostat  .tau = 50.0
    }
    randomize_velocity.interval = 1.0
    eneseq.interval             = 0.3
    trajectory.center           = []
}
BROSIM
}

Langevin_simulate_2(){
    # Langevin_simulate_2 simulate_time class constraintDescription
    simulate_time=$1
    class=$2
    constraintDescription=$3
cat<<BROSIM
simulate {
    title       = "Langevin Dynamics, T = ${temperature} K, ${simulate_time} ps"
    effect_if   = [["@*.*.annealing"] 'annealing = off temperature = "@*.*.temperature[0][0]"']
    time        = ${simulate_time}
    ${constraintDescription}
    ensemble    = {
        class  = ${class}
        method = Langevin
        thermostat.tau = 0.1
        barostat  .tau = 50.0
    }
    randomize_velocity.interval = 1.0
    eneseq.interval             = 0.3
    trajectory.center           = []
}
BROSIM
}

Langevin_simulate_3(){
    # Langevin_simulate_3 simulate_time class constraintDescription
    simulate_time=$1
    class=$2
    constraintDescription=$3
cat<<BROSIM
simulate {
    title       = "Langevin Dynamics, T = ${temperature} K, ${simulate_time} ps"
    effect_if   = [["@*.*.annealing"] 'annealing = off temperature = "@*.*.temperature[0][0]"']
    time        = ${simulate_time}
    ensemble    = {
        class  = ${class}
        method = Langevin
        thermostat.tau = 0.1
        barostat  .tau = 2.0
    }
    eneseq.interval             = 0.3
    trajectory.center           = []
}
BROSIM
}

md_simulate(){
    # md_simulate mdtime_ps CFG_filename constraintDescription
    mdtime_ps=$1
    CFG_filename=$2
    constraintDescription=$3
cat<< SIM 

simulate {
    title    = "Final MD, ${mdtime_ps} ps"
    ${constraintDescription}
    time = ${mdtime_ps}
    cfg_file = "${CFG_filename}"
    jobname  = "\$MASTERJOBNAME"
    dir      = "."
    compress = ""
}
SIM
}

meta_simulate(){
    # meta_simulate mdtime_ps CFG_filename GroupA_ASL GroupB_ASL Distance_Wall Meta_window User_set_constraint
    mdtime_ps=$1
    CFG_filename=$2
    GroupA_ASL=$3
    GroupB_ASL=$4
    Distance_Wall=$5
    Meta_window=$6
    User_set_constraint=$7
cat<<META
simulate {
  cfg_file = "${CFG_filename}"
  jobname = "\$MASTERJOBNAME"
  dir = "."
  compress = ""
  time = ${mdtime_ps}
  ${User_set_constraint}
  meta = {
    cv = [
      {atom = ["${GroupA_ASL} and not a.e H" "${GroupB_ASL} and not a.e H"]
       type = "dist"
       width = ${Meta_window}
       wall = ${Distance_Wall}
      }
    ]
    cv_name = "\$JOBNAME\$[_replica\$REPLICA\$].cvseq"
    first = 0.0
    height = 0.03
    interval = 1.2
    kTemp = 2.4
    name = "\$JOBNAME\$[_replica\$REPLICA\$].kerseq"
  }
  checkpt.write_last_step = yes
}
META
}

pl_analysis(){
    # pl_analysis Ligand_ASL Protein_ASL
    Ligand_ASL=$1
    Protein_ASL=$2
cat<<PLA
pl_analysis {
    ligand_asl = "$Ligand_ASL"
    protein_asl = "$Protein_ASL"
    dir = "${Job_Dir}/"
}
PLA
}

rmsd_analysis(){
    # rmsd_analysis rmsd_ASL fit_ASL name
    rmsd_ASL=$1
    fit_ASL=$2
    name=$3
cat<<ST2 > ${Job_Dir}/${name}.st2
Keywords = [
    {RMSD = {
            ASL = "(${rmsd_ASL})"
            FitBy = "(${fit_ASL})"
            Frame = 0
            Name = \$JOBNAME_${name}
            Type = ASL
            Unit = Angstrom
        }
    }
]
Trajectory = "\$JOBNAME\$[_replica\$REPLICA\$]-out.cms"
ST2
cat<<ANALYSIS
analysis {
    SEA = "${Job_Dir}/rmsd.st2"
    dir = "${Job_Dir}/"
    report = "${Job_Dir}/\$JOBNAME_${name}_report.html"
}
ANALYSIS
}

rmsf_analysis(){
    # rmsf_analysis rmsf_ASL
    rmsf_ASL=$1
cat<<ST2 > ${Job_Dir}/rmsf.st2
Keywords = [
    {RMSF = {
        ASL = "(${rmsf_ASL})"
        FitBy = "(${rmsf_ASL})"
        Frame = 0
        Name = \$JOBNAME_rmsf
        Type = ASL
        Unit = Angstrom
        }
   }
]
Trajectory = "\$JOBNAME\$[_replica\$REPLICA\$]-out.cms"
ST2
cat<<ANALYSIS
analysis {
    SEA = "${Job_Dir}/rmsf.st2"
    dir = "${Job_Dir}/"
    report = "${Job_Dir}/\$JOBNAME_rmsf_report.html"
}
ANALYSIS
}

meta_analysis(){
    # meta_analysis 
cat<<ANALYSIS
analysis {
    meta = { }
    dir = "${Job_Dir}/"
    compress = ""
    report = ".${Job_Dir}/\$JOBNAME_meta_report.html"
}
ANALYSIS
}

simulate_cfg(){
    #simulate_cfg seed 
    seed=$1
    if [ $MD_Mode == "PLS" ];then
        Total_time=`echo "${mdtime_ps} ${meta_time_ps}" | awk '{print $1+$2}'`
    else
        Total_time=${mdtime_ps}
    fi
    interval=`echo "scale=1;${Total_time} / ${frames}"|bc`
cat<<MDCFG

annealing = false
backend = {
}
bigger_rclone = false
checkpt = {
    first = 0.0
    interval = 240.06
    name = "\$JOBNAME.cpt"
    write_last_step = true
}
cpu = 1
cutoff_radius = 9.0
elapsed_time = 0.0
energy_group = false
eneseq = {
    first = 0.0
    interval = 1.2
    name = "\$JOBNAME\$[_replica\$REPLICA\$].ene"
}
ensemble = {
barostat = {
    tau = 2.0
}
class = NPT
method = MTK
thermostat = {
    tau = 1.0
}
}
glue = solute
maeff_output = {
    first = 0.0
    interval = 120.0
    name = "\$JOBNAME\$[_replica\$REPLICA\$]-out.cms"
    periodicfix = true
    trjdir = "\$JOBNAME\$[_replica\$REPLICA\$]_trj"
}
pressure = [1.01325 isotropic ]
randomize_velocity = {
    first = 0.0
    interval = inf
    seed = ${seed}
    temperature = "@*.temperature"
}
simbox = {
    first = 0.0
    interval = 1.2
    name = "\$JOBNAME\$[_replica\$REPLICA\$]_simbox.dat"
}
surface_tension = 0.0
taper = false
temperature = [
    [${Temperature}.0 0 ]
]
timestep = [0.002 0.002 0.006 ]
trajectory = {
    center = []
    first = 0.0
    format = dtr
    frames_per_file = 250
    interval = ${interval}
    name = "\$JOBNAME\$[_replica\$REPLICA\$]_trj"
    periodicfix = true
    write_velocity = false
}
MDCFG
}

# report MD information
cat<<OUT

Jobs will run at $CPU_HOST and ${GPU_HOST} ;

Your MD information is as follows:

boxshape: ${boxshape}
boxsize: ${boxsize}
minimize_volume: ${minisys}

forcefield: ${ffid}

temperature: ${Temperature} K
Rondom numbers list: ${seedlist[@]}

OUT

cat<<MSJ1 > ${MSJ_file}
task {
  task = "desmond:auto"
  set_family = {
    simulate = {
    checkpt.write_last_step = no
    }
  }
}

MSJ1

# Generate MSJ file and report MD information
if [ $System_Mode == "INC" ];then
    solvent="TIP3P"
    positive_ion="K"
    negative_ion="Cl"
    saltconcentration="0.15"
    build_geometry
elif [ $System_Mode == "OUC" ];then
    solvent="TIP3P"
    positive_ion="Na"
    negative_ion="Cl"
    saltconcentration="0.15"
    build_geometry
else
    Custom_array=(${System_Mode//:/ })
    solvent=${Custom_array[0]}
    neutralizeion=${Custom_array[1]}
    salt_buffer_info=${Custom_array[2]}
    checkparam ${neutralizeion} "${all_ions_list[*]}"
    checkparam ${solvent} "${solventlist[*]}"
    echo "build_geometry {" >> ${MSJ_file}
    echo "add ion to neutral: ${neutralizeion}"
    add_counterion ${neutralizeion} >> ${MSJ_file}
    box ${boxshape} ${boxsize} >> ${MSJ_file}
    if [ ${ffid:0:4} == "OPLS" ] || [ ${ffid} == "S-OPLS" ]; then
        echo "  override_forcefield = ${ffid}" >> ${MSJ_file}
    else
        echo "  override_forcefield = OPLS_2005" >> ${MSJ_file}
    fi
    echo "  rezero_system = ${rezerosys}" >> ${MSJ_file}
    echo "  minimize_volume = ${minisys}" >> ${MSJ_file}
    echo "add solvent: ${solvent}"
    salt_buffer_list=(${salt_buffer_info//+/ })
    for salt_buffer in ${salt_buffer_list[@]} ;do
        salt_buffer_array=(${salt_buffer//-/ })
        saltconcentration=${salt_buffer_array[0]}
        positive_ion=${salt_buffer_array[1]}
        negative_ion=${salt_buffer_array[2]}
        checkparam ${positive_ion} "${positiveionlist[*]}"
        checkparam ${negative_ion} "${nagativeionlist[*]}"
        setup_salt ${saltconcentration} ${positive_ion} ${negative_ion} >> ${MSJ_file}
        echo "add salt: ${saltconcentration} M ${positive_ion}${negative_ion}"
    done
    echo "  solvent = ${solvent}" >> ${MSJ_file}
    echo "}" >> ${MSJ_file}
fi

# process water information
for line in ${waterlist[@]}; do
if [ "$solvent" == "$line" ];then
  water="water = ${solvent}"
  break
fi; done


cat<<MSJ2 >> ${MSJ_file}

assign_forcefield {
  forcefield = ${ffid}
  hydrogen_mass_repartition = ${hydrogen_mass_repartition}
  ${water}
  dir      = "."
  compress = ""
}

MSJ2

echo "";echo "Setting up simulation process......"; echo ""

solute_constraint="restrain = { atom = \"solute_heavy_atom\" force_constant = 50.0 }"
if [ $MD_Mode == "Normal" ]; then
    mdtime_ps=100000.0
    mintime_ps=100
    if [ ${Userset_mdtime_ps} ];then
        mdtime_ps=${Userset_mdtime_ps}
    fi
    if [ ${Userset_mintime_ps} ];then
        mintime_ps=${Userset_mintime_ps}
    fi
    Brownie_simulate "100" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, 100 ps, 10 K and restraints on solute heavy atoms."
    Brownie_simulate "${mintime_ps}" 10.0 "${User_set_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, ${mintime_ps} ps, 10 K and restraints on user setting constraint. default is none."
    Langevin_small_timestep "12" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Langevin_small_timestep stage, 12 ps, 10 K and restraints on solute heavy atoms."
    Langevin_simulate_1 "12" "10.0" "NPT" "${solute_constraint}" "off" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_1 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_2 "12" "NPT" "${solute_constraint}" >> ${MSJ_file} 
    echo "Langevin_NPT_simulate_2 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_3 "12" "NPT" "${User_set_constraint}" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_3 stage, 12 ps and  restraints on user setting constraint. default is none."
    md_simulate ${mdtime_ps} ${CFG_file} "${User_set_constraint}" >> ${MSJ_file}
    echo "Langevin_simulate stage, ${mdtime_ps} ps and  restraints on user setting constraint. default is none."; 
    #rmsf_analysis "protein"  >> ${MSJ_file}
    #echo "rmsf_analysis stage, protein."; 
    #rmsd_analysis "protein AND atom.ptype CA" "protein AND atom.ptype CA" "CA_RMSD" >> ${MSJ_file}
    #echo "rmsd_analysis stage, protein CA."; 
    echo "";
elif [ $MD_Mode == "MIN" ]; then
    mdtime_ps=1000.00
    mintime_ps=100
    if [ ${Userset_mdtime_ps} ];then
        mdtime_ps=${Userset_mdtime_ps}
    fi
    if [ ${Userset_mintime_ps} ];then
        mintime_ps=${Userset_mintime_ps}
    fi
    Brownie_simulate "100" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, 100 ps, 10 K and restraints on solute heavy atoms."
    Brownie_simulate "${mintime_ps}" 10.0 "${User_set_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, ${mintime_ps} ps, 10 K and restraints on user setting constraint. default is none."
    Langevin_small_timestep "12" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Langevin_small_timestep stage, 12 ps, 10 K and restraints on solute heavy atoms."
    Langevin_simulate_1 "12" "10.0" "NPT" "${solute_constraint}" "off" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_1 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_2 "12" "NPT" "${solute_constraint}" >> ${MSJ_file} 
    echo "Langevin_NPT_simulate_2 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_3 "12" "NPT" "${User_set_constraint}" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_3 stage, 12 ps and  restraints on user setting constraint. default is none."
    md_simulate ${mdtime_ps} ${CFG_file} "${User_set_constraint}" >> ${MSJ_file}
    echo "Langevin_simulate stage, ${mdtime_ps} ps and  restraints on user setting constraint. default is none."; echo "";
    #rmsd_analysis "protein AND atom.ptype CA" "protein AND atom.ptype CA" "CA_RMSD" >> ${MSJ_file}
    #echo "rmsd_analysis stage, protein CA."; 
    echo "";
elif [ $MD_Mode == "PL" ]; then
    mdtime_ps=100000.0
    mintime_ps=100
    if [ ${Userset_mdtime_ps} ];then
        mdtime_ps=${Userset_mdtime_ps}
    fi
    if [ ${Userset_mintime_ps} ];then
        mintime_ps=${Userset_mintime_ps}
    fi
    Brownie_simulate "100" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, 100 ps, 10 K and restraints on solute heavy atoms."
    Brownie_simulate "${mintime_ps}" 10.0 "${User_set_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, ${mintime_ps} ps, 10 K and restraints on user setting constraint. default is none."
    Langevin_small_timestep "12" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Langevin_small_timestep stage, 12 ps, 10 K and restraints on solute heavy atoms."
    Langevin_simulate_1 "12" "10.0" "NPT" "${solute_constraint}" "off" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_1 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_2 "12" "NPT" "${solute_constraint}" >> ${MSJ_file} 
    echo "Langevin_NPT_simulate_2 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_3 "12" "NPT" "${User_set_constraint}" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_3 stage, 12 ps and  restraints on user setting constraint. default is none."
    md_simulate ${mdtime_ps} ${CFG_file} "${User_set_constraint}" >> ${MSJ_file}
    echo "Langevin_simulate stage, ${mdtime_ps} ps and  restraints on user setting constraint. default is none."; 
    pl_analysis "${GroupB_ASL}" "${GroupA_ASL}" >> ${MSJ_file}
    echo "pl_analysis stage, Protein: ${GroupA_ASL} ; Ligand: ${GroupB_ASL}."; 
    echo "";
elif [ $MD_Mode == "PP" ]; then
    mdtime_ps=100000.0
    mintime_ps=100
    if [ ${Userset_mdtime_ps} ];then
        mdtime_ps=${Userset_mdtime_ps}
    fi
    if [ ${Userset_mintime_ps} ];then
        mintime_ps=${Userset_mintime_ps}
    fi
    Brownie_simulate "100" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, 100 ps, 10 K and restraints on solute heavy atoms."
    Brownie_simulate "${mintime_ps}" 10.0 "${User_set_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, ${mintime_ps} ps, 10 K and restraints on user setting constraint. default is none."
    Langevin_small_timestep "12" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Langevin_small_timestep stage, 12 ps, 10 K and restraints on solute heavy atoms."
    Langevin_simulate_1 "12" "10.0" "NPT" "${solute_constraint}" "off" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_1 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_2 "12" "NPT" "${solute_constraint}" >> ${MSJ_file} 
    echo "Langevin_NPT_simulate_2 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_3 "12" "NPT" "${User_set_constraint}" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_3 stage, 12 ps and  restraints on user setting constraint. default is none."
    md_simulate ${mdtime_ps} ${CFG_file} "${User_set_constraint}" >> ${MSJ_file}
    echo "Langevin_simulate stage, ${mdtime_ps} ps and  restraints on user setting constraint. default is none."; 
    #rmsd_analysis "${GroupB_ASL}" "${GroupA_ASL}" "PPI_RMSD_B" >> ${MSJ_file}
    #echo "rmsd_analysis stage, ${GroupB_ASL} RMSD fit to ${GroupA_ASL}."; 
    #rmsd_analysis "${GroupA_ASL}" "${GroupB_ASL}" "PPI_RMSD_A" >> ${MSJ_file}
    #echo "rmsd_analysis stage, ${GroupA_ASL} RMSD fit to ${GroupB_ASL}."; 
    echo "";
elif [ $MD_Mode == "META" ]; then
    mdtime_ps=100000.0
    mintime_ps=100
    if [ ${Userset_mdtime_ps} ];then
        mdtime_ps=${Userset_mdtime_ps}
    fi
    if [ ${Userset_mintime_ps} ];then
        mintime_ps=${Userset_mintime_ps}
    fi
    Brownie_simulate "100" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, 100 ps, 10 K and restraints on solute heavy atoms."
    Brownie_simulate "${mintime_ps}" 10.0 "${User_set_constraint}" "NVT" >> ${MSJ_file}
    echo "Brownie_simulate stage, ${mintime_ps} ps, 10 K and restraints on user setting constraint. default is none."
    Langevin_small_timestep "12" "10.0" "${solute_constraint}" "NVT" >> ${MSJ_file}
    echo "Langevin_small_timestep stage, 12 ps, 10 K and restraints on solute heavy atoms."
    Langevin_simulate_1 "12" "10.0" "NPT" "${solute_constraint}" "off" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_1 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_2 "12" "NPT" "${solute_constraint}" >> ${MSJ_file} 
    echo "Langevin_NPT_simulate_2 stage, 12 ps and  restraints on solute heavy atoms."
    Langevin_simulate_3 "12" "NPT" "${User_set_constraint}" >> ${MSJ_file}
    echo "Langevin_NPT_simulate_3 stage, 12 ps and  restraints on user setting constraint. default is none."
    meta_simulate ${mdtime_ps} ${CFG_file} "${GroupA_ASL}" "${GroupB_ASL}" "${Distance_Wall}" "${Meta_window}" "${User_set_constraint}" >> ${MSJ_file}
    echo "Metadynamics stage, ${mdtime_ps} ps, ${GroupA_ASL} and ${GroupB_ASL}, with ${Distance_Wall} wall and ${Meta_window} width."
    meta_analysis >> ${MSJ_file}
    echo "";
else
    echo "Your parameter of MD_Mode: -M ${MD_Mode} is Invalid."
fi

# Check input file
if ls $input >/dev/null 2>&1;then
  echo ""
  echo "These mae files will be processed:"
  for i in `ls $input`; do echo $i;done
else
  echo "Error: mae file not found, please check it."
  exit
fi
echo ""

for i in `ls $input`; do
for seed in ${seedlist[@]};do
    mkdir ${i%%.mae*}-${seed}-md
    cd ${i%%.mae*}-${seed}-md
    simulate_cfg ${seed} >> ${CFG_file}
    $Desmond/utilities/multisim -JOBNAME ${i%%.mae*}-${seed}-md -HOST $CPU_HOST -SUBHOST $GPU_HOST -maxjob 1 -cpu 1 -m ../${MSJ_file} -c ${CFG_file} -lic DESMOND_ACADEMIC:16 -o ../${i%%.mae*}-${seed}-md-out.cms ../$i
    cd ..
    date
    echo "MD system ${i%%.mae*} with ${seed} seed had been submitted to $CPU_HOST and $GPU_HOST."
done
done

cat<<FF

All jobs are running!
Thank you for your using, If you found any question, Please contact wanglin3@shanghaitech.edu.cn.

FF

