#!/bin/bash

input=*-M.cms
time=100000.0
Host=HPC_GPU
num=1
temperature=310
frames=1000
Analysis=false
ProteinASL="chain.name A"
LigandASL="res.ptype UNK"

export Desmond=${Desmond}

help (){
cat<<HELP

Usage: mdrun [OPTION] <parameter>

Perform Molecular dynamics simulation.

Example: mdrun  -i "*-M.cms" -t 100 -n 1 -H HPC_gpu01 -T 310 -o 1000

Input parameter:
  -i	Use a file name (Multiple files are wrapped in "", and split by ' ') or regular expression to represent your input file, default is "*-M.cms".

MD control parameter:
  -t    Enter the Molecular dynamics simulation time for the Brownian motion simulation, in ns.
  -T    Specify the temperature to be used, in kelvin. <310>
  -n    Group number of different random numbers. <1>
  -p    Define a ASL to protein, such as "chain.name A"
  -l    Define a ASL to ligand, such as "res.ptype UNK"
  -o    Specify the approximate number of frames in the trajectory.  <1000>
        This value is coupled with the recording interval for the trajectory and the simulation time: the number of frames times the trajectory recording interval is the total simulation time.
        If you adjust the number of frames, the recording interval is modified.

Job control:
  -H	Hostname of your queue, defult is HPC_GPU.
  -D	Your Desmond path. <$Desmond>

Thank you for your using, If you found any problem, Please contact wanglin3@shanghaitech.edu.cn.
HELP
}

while getopts ":hi:t:H:rn:T:o:D:p:l:" opt
do
  case $opt in
    h)
        help
        exit;;
    i)
        input=$OPTARG;;
    H)
        Host=$OPTARG;;
    t)
        time=`echo "${OPTARG} * 1000.0"|bc`;;
#((time=${OPTARG}*1000));time=$time'.0';;
    n)
        num=$OPTARG;;
    p)
        Analysis=true
        ProteinASL=$OPTARG;;
    l)
        Analysis=true
        LigandASL=$OPTARG;;
    T)
        temperature=$OPTARG;;
    o)
        frames=$OPTARG;;
    D)
        Desmond=$OPTARG;;
    ?)
        echo ""
        echo "Error: Do not use undefined options."
        echo ""
        help
        exit;;
    esac
done

if [ -d ${Desmond} ];then
  if [ "${Desmond}" == "" ];then
    echo "Desmond not found. Please check your Desmond Path."
    exit
  fi
  if [ "`grep -c $Host ${Desmond}/schrodinger.hosts`" == "0" ];then
    echo $Host "Host not found."
    exit
  fi
else
  echo "Desmond not found. Please check your Desmond Path."
  exit
fi

interval=`echo "scale=1;${time} / ${frames}"|bc`
seedlist=()

if [ ${num} -gt 3 ];then
    read -p "Do you really want to run more than three random simulations? Make sure you have adequate resources. Press Enter to continue and enter NO to exit!" makesure
    if [ "$makesure" == "NO" ];then
        echo "This is really a wise choice!"
        exit
    else
        echo "Your system will perform ${num} simulations at different random speeds."
        for i in $(seq 1 ${num});do
        seedlist+=("$RANDOM");done
    fi
elif [ "${num}" == "1" ];then
        seedlist=(2007)
        echo "Your system will only perform one simulation."
else
    echo "Your system will perform ${num} simulations at different random speeds."
    for i in $(seq 1 ${num});do
    seedlist+=("$RANDOM");done
fi

echo "Your Job dictionary:"
pwd
cat<<OUT

Jobs will run at $Host

Your MD information is as follows:

time: ${time} ps
temperature: ${temperature} K
Rondom numbers list: ${seedlist[@]}
Interval time: ${interval}

OUT

if ls $input >/dev/null 2>&1;then
  echo "These cms files will be processed:"
  for i in `ls $input`; do echo $i;done
  echo "These cms files will be geneated:"
  for i in `ls $input`; do echo ${i%%.cms*}-MD-out.cms;done
else
  echo "Error: cms file not found, please check it."
  exit
fi

parameterfile (){
cat<<MSJ > ./$1/md_job.msj
task {
   task = "desmond:auto"
   set_family = {
      desmond = {
         checkpt.write_last_step = no
      }
   }
}

simulate {
   title       = "Brownian Dynamics NVT, T = 10 K, small timesteps, and restraints on solute heavy atoms, 100ps"
   annealing   = off
   time        = 100
   timestep    = [0.001 0.001 0.003 ]
   temperature = 10.0
   ensemble = {
      class = "NVT"
      method = "Brownie"
      brownie = {
         delta_max = 0.1
      }
   }
   restrain = {
      atom = "solute_heavy_atom"
      force_constant = 50.0
   }
}

simulate {
   effect_if   = [["==" "-gpu" "@*.*.jlaunch_opt[-1]"] 'ensemble.method = Langevin']
   title       = "NVT, T = 10 K, small timesteps, and restraints on solute heavy atoms, 12ps"
   annealing   = off
   time        = 12
   timestep    = [0.001 0.001 0.003]
   temperature = 10.0
   restrain    = { atom = solute_heavy_atom force_constant = 50.0 }
   ensemble    = {
      class  = NVT
      method = Berendsen
      thermostat.tau = 0.1
   }

   randomize_velocity.interval = 1.0
   eneseq.interval             = 0.3
   trajectory.center           = []
}

simulate {
   title       = "NPT, T = 10 K, and restraints on solute heavy atoms, 12ps"
   effect_if   = [["==" "-gpu" "@*.*.jlaunch_opt[-1]"] 'ensemble.method = Langevin']
   annealing   = off
   time        = 12
   temperature = 10.0
   restrain    = retain
   ensemble    = {
      class  = NPT
      method = Berendsen
      thermostat.tau = 0.1
      barostat  .tau = 50.0
   }

   randomize_velocity.interval = 1.0
   eneseq.interval             = 0.3
   trajectory.center           = []
}

solvate_pocket {
   should_skip = true
   ligand_file = ?
}

simulate {
   title       = "NPT and restraints on solute heavy atoms, 12ps"
   effect_if   = [["@*.*.annealing"] 'annealing = off temperature = "@*.*.temperature[0][0]"'
                  ["==" "-gpu" "@*.*.jlaunch_opt[-1]"] 'ensemble.method = Langevin']
   time        = 12
   restrain    = retain
   ensemble    = {
      class  = NPT
      method = Berendsen
      thermostat.tau = 0.1
      barostat  .tau = 50.0
   }

   randomize_velocity.interval = 1.0
   eneseq.interval             = 0.3
   trajectory.center           = []
}

simulate {
   title       = "NPT and no restraints, 24ps"
   effect_if   = [["@*.*.annealing"] 'annealing = off temperature = "@*.*.temperature[0][0]"'
                  ["==" "-gpu" "@*.*.jlaunch_opt[-1]"] 'ensemble.method = Langevin']
   time        = 24
   ensemble    = {
      class  = NPT
      method = Berendsen
      thermostat.tau = 0.1
      barostat  .tau = 2.0
   }

   eneseq.interval   = 0.3
   trajectory.center = solute
}

simulate {
   cfg_file = "md_job.cfg"
   jobname  = "\$MASTERJOBNAME"
   dir      = "."
   compress = ""
}
MSJ
if [ "$Analysis"x == "true"x ];then
cat<<MSJAA >> ./$1/md_job.msj

pl_analysis {
    ligand_asl = "$LigandASL"
    protein_asl = "$ProteinASL"
}
MSJAA
fi

cat<<CFG > ./$1/md_job.cfg
annealing = false
backend = {
}
bigger_rclone = false
checkpt = {
   first = 0.0
   interval = 240.06
   name = "\$JOBNAME.cpt"
   write_last_step = true
}
cpu = 1
cutoff_radius = 9.0
elapsed_time = 0.0
energy_group = false
eneseq = {
   first = 0.0
   interval = 1.2
   name = "\$JOBNAME\$[_replica\$REPLICA\$].ene"
}
ensemble = {
   barostat = {
      tau = 2.0
   }
   class = NPT
   method = MTK
   thermostat = {
      tau = 1.0
   }
}
glue = solute
maeff_output = {
   first = 0.0
   interval = 120.0
   name = "\$JOBNAME\$[_replica\$REPLICA\$]-out.cms"
   periodicfix = true
   trjdir = "\$JOBNAME\$[_replica\$REPLICA\$]_trj"
}
meta = false
meta_file = ?
pressure = [1.01325 isotropic ]
randomize_velocity = {
   first = 0.0
   interval = inf
   seed = $2
   temperature = "@*.temperature"
}
restrain = none
simbox = {
   first = 0.0
   interval = 1.2
   name = "\$JOBNAME\$[_replica\$REPLICA\$]_simbox.dat"
}
surface_tension = 0.0
taper = false
temperature = [
   [${temperature}.0 0 ]
]
time = ${time}
timestep = [0.002 0.002 0.006 ]
trajectory = {
   center = []
   first = 0.0
   format = dtr
   frames_per_file = 250
   interval = ${interval}
   name = "\$JOBNAME\$[_replica\$REPLICA\$]_trj"
   periodicfix = true
   write_velocity = false
}
CFG
}

for i in `ls $input`; do
for seed in ${seedlist[@]};do
    mkdir ${i%%.cms*}-${seed}-md
    parameterfile ${i%%.cms*}-${seed}-md ${seed}
    cd ${i%%.cms*}-${seed}-md
    $Desmond/utilities/multisim -JOBNAME ${i%%.cms*}-md -HOST HPC_CPU -SUBHOST $Host -maxjob 1 -cpu 1 -m md_job.msj -c md_job.cfg -description "Molecular Dynamics" ../$i -o ${i%%.cms*}-md-out.cms -lic DESMOND_ACADEMIC:16
    cd ..
    date
    echo "MD system ${i%%.cms*} with ${seed} seed had been submit to $Host."
done
done

cat<<FF

All jobs are running!
Please check the results of your task. 

FF
